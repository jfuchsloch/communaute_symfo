<?php

namespace EyesBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * utilisateursRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class utilisateursRepository extends EntityRepository
{
	 public function findMembre($type, $password)
    {
       /* $query = $this->getEntityManager()->createQuery(
            "SELECT f  FROM  EyesBundle:utilisateurs f  WHERE f.login = :letype and f.password = :lepassword"

        );*/

         $query = $this->getEntityManager()->createQuery(
            "SELECT f  FROM  EyesBundle:utilisateurs f  WHERE f.login = :letype and f.password = :lepassword"

        );

        $pwd = sha1($password);
        //$pwd = $password;
        //var_dump($pwd);
      $query->setParameter("letype", $type);
       // $query->setParameter("letype", $type)->getResult();
       $query->setParameter("lepassword", $pwd);
      //  $query->setParameter("lepassword", $pwd)->getResult();
      // var_dump($type);
       //var_dump($pwd);
       //var_dump($query);

       //$query->setParameter("lepassword", $password);
        // equivalent en sql  SELECT COUNT( * ) , Genre.type
        //  FROM film
//JOIN Genre ON Genre.id = film.laisonGenre_id
//GROUP BY Genre.type

       // var_dump($query->getResult());

        //die("ko");

// !!! reste a l'afficher dans la vue !!!!!!
        return $query->getResult();

    }


   public function findMembre_serv($type)
    {
       /* $query = $this->getEntityManager()->createQuery(
            "SELECT f  FROM  EyesBundle:utilisateurs f  WHERE f.login = :letype and f.password = :lepassword"

        );*/

         $query = $this->getEntityManager()->createQuery(
            "SELECT f  FROM  EyesBundle:utilisateurs f  WHERE f.login = :letype"

        );

      
        //$pwd = $password;
        //var_dump($pwd);
      $query->setParameter("letype", $type);
       // $query->setParameter("letype", $type)->getResult();
      
      //  $query->setParameter("lepassword", $pwd)->getResult();
      // var_dump($type);
       //var_dump($pwd);
       //var_dump($query);

       //$query->setParameter("lepassword", $password);
        // equivalent en sql  SELECT COUNT( * ) , Genre.type
        //  FROM film
//JOIN Genre ON Genre.id = film.laisonGenre_id
//GROUP BY Genre.type

       // var_dump($query->getResult());

        //die("ko");

// !!! reste a l'afficher dans la vue !!!!!!
        return $query->getResult();

    }



     public function findMembre_deconnexion($id)
    {
       /* $query = $this->getEntityManager()->createQuery(
            "SELECT f  FROM  EyesBundle:utilisateurs f  WHERE f.login = :letype and f.password = :lepassword"

        );*/

         $query = $this->getEntityManager()->createQuery(
            "SELECT f  FROM  EyesBundle:utilisateurs f  WHERE f.id = :leid"

        );

        //$pwd = sha1($password);
        
        //var_dump($pwd);
      $query->setParameter("leid", $id);
       // $query->setParameter("letype", $type)->getResult();
      // $query->setParameter("lepassword", $pwd);
      //  $query->setParameter("lepassword", $pwd)->getResult();
      // var_dump($type);
       //var_dump($pwd);
       //var_dump($query);

       //$query->setParameter("lepassword", $password);
        // equivalent en sql  SELECT COUNT( * ) , Genre.type
        //  FROM film
//JOIN Genre ON Genre.id = film.laisonGenre_id
//GROUP BY Genre.type

        //var_dump($query->getResult());

        //die("ko");

// !!! reste a l'afficher dans la vue !!!!!!
        return $query->getResult();

    }


     public function updateMembre($type, $password)
    {
        $query = $this->getEntityManager()->createQuery(
            "UPDATE  EyesBundle:utilisateurs f SET f.connected=1  WHERE f.login = :letype and f.password = :lepassword"

        );

        $pwd = sha1($password);
        //$pwd = $password;
        $query->setParameter("letype", $type);
         $query->setParameter("lepassword", $pwd);
       //$query->setParameter("lepassword", $password);
      // $query->setParameter("lepassword", $password);
        // equivalent en sql  SELECT COUNT( * ) , Genre.type
        //  FROM film
//JOIN Genre ON Genre.id = film.laisonGenre_id
//GROUP BY Genre.type

        //var_dump($query->getResult());



// !!! reste a l'afficher dans la vue !!!!!!
        return $query->getResult();

    }

    
          public function updeconnexion($id)
    {
         $query = $this->getEntityManager()->createQuery(
            "UPDATE  EyesBundle:utilisateurs f SET f.connected=0  WHERE f.id = :lid"

        );

        $query->setParameter("lid", $id);

        //var_dump("updeconnexion");
        //var_dump($id);
        return $query->getResult();

    }

     public function getNombreDeMembreConnectes()
    {
        $query = $this->getEntityManager()->createQuery(
            "SELECT f  FROM  EyesBundle:utilisateurs f  WHERE f.connected = 1"

        );

        //die(var_dump($query->getSingleScalarResult()));
       // var_dump($query->getResult());
        return $query->getResult();
    }

    public function getNombreDeConnectes()
    {
        $query = $this->getEntityManager()->createQuery(
            "SELECT count(f) from EyesBundle:utilisateurs f  WHERE f.connected = 1"

        );

        //die(var_dump($query->getSingleScalarResult()));

        return $query->getSingleScalarResult();
    }



    public function findMembre_Services($age, $pays, $ville, $region)
    {

         $query = $this->getEntityManager()->createQuery(
            "SELECT f  FROM  EyesBundle:utilisateurs f  WHERE f.age = :leage 
                                                              and f.pays = :lepays
                                                              and f.ville = :laville
                                                              and f.region = :laregion
                                                              and f.connected = 1"

        );

       
      $query->setParameter("leage", $age);
      $query->setParameter("lepays", $pays);
      $query->setParameter("laville", $ville);
      $query->setParameter("laregion", $region);

       //var_dump($query->getResult());
        return $query->getResult();

           
    }



}
